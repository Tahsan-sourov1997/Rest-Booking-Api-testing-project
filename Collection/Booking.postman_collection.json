{
	"info": {
		"_postman_id": "353481f8-d837-482b-80e5-fbc9e77a650c",
		"name": "Booking",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38812065"
	},
	"item": [
		{
			"name": "create booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var jsonData = pm.response.json()\r",
							"pm.environment.set(\"id\",jsonData.bookingid)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstName = pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"console.log(firstName)\r",
							"pm.environment.set(\"firstName\",firstName)\r",
							"\r",
							"var lastName = pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"console.log(lastName)\r",
							"pm.environment.set(\"lastName\",lastName)\r",
							"\r",
							"var totalPrice = pm.variables.replaceIn(\"{{$randomInt}}\")\r",
							"console.log(totalPrice)\r",
							"pm.environment.set(\"totalPrice\",totalPrice)\r",
							"\r",
							"var depositPaid = pm.variables.replaceIn(\"{{$randomBoolean}}\")\r",
							"console.log(depositPaid)\r",
							"pm.environment.set(\"depositPaid\",depositPaid)\r",
							"\r",
							"const moment = require(\"moment\")\r",
							"const today = moment()\r",
							"var checkin = (today.add(5,'d').add(1,'M').format(\"YYYY-MM-DD\"))\r",
							"pm.environment.set(\"checkin\",checkin)\r",
							"\r",
							"const moment2 = require(\"moment\")\r",
							"const today2 = moment2()\r",
							"var checkout = (today2.add(7,'d').add(1,'M').format(\"YYYY-MM-DD\"))\r",
							"pm.environment.set(\"checkout\",checkout)\r",
							"\r",
							"var additionalNeeds = pm.variables.replaceIn(\"{{$randomWord}}\")\r",
							"console.log(additionalNeeds)\r",
							"pm.environment.set(\"additionalNeeds\",additionalNeeds)\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\" : \"{{firstName}}\",\r\n\t\"lastname\" : \"{{lastName}}\",\r\n\t\"totalprice\" : {{totalPrice}},\r\n\t\"depositpaid\" : {{depositPaid}},\r\n\t\"bookingdates\" : {\r\n    \t\"checkin\" : \"{{checkin}}\",\r\n    \t\"checkout\" : \"{{checkout}}\"\r\n\t},\r\n\t\"additionalneeds\" : \"{{additionalNeeds}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get booking info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json()\r",
							"pm.test(\"First name validation\",function(){\r",
							"    pm.expect(jsonData.firstname).to.equal(pm.environment.get(\"firstName\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Last name validation\",function(){\r",
							"    pm.expect(jsonData.lastname).to.equal(pm.environment.get(\"lastName\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Verify total price\",function(){\r",
							"    pm.expect(jsonData.totalprice.toString()).to.equal(pm.environment.get(\"totalPrice\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Verify depositpaid\",function(){\r",
							"    pm.expect(jsonData.depositpaid.toString()).to.equal(pm.environment.get(\"depositPaid\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Verify checkin date\",function(){\r",
							"    pm.expect(jsonData.bookingdates.checkin).to.equal(pm.environment.get(\"checkin\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Verify checkout date\",function(){\r",
							"    pm.expect(jsonData.bookingdates.checkout).to.equal(pm.environment.get(\"checkout\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Verify additionalneeds\",function(){\r",
							"    pm.expect(jsonData.additionalneeds).to.equal(pm.environment.get(\"additionalNeeds\"))\r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var jsonData = pm.response.json()\r",
							"pm.environment.set(\"token\",jsonData.token)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"username\": \"admin\",\r\n\t\"password\": \"password123\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/auth",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update booking",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstName = pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"console.log(firstName)\r",
							"pm.environment.set(\"Updated_firstName\",firstName)\r",
							"\r",
							"var lastName = pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"console.log(lastName)\r",
							"pm.environment.set(\"Updated_lastName\",lastName)\r",
							"\r",
							"var totalPrice = pm.variables.replaceIn(\"{{$randomInt}}\")\r",
							"console.log(totalPrice)\r",
							"pm.environment.set(\"Updated_totalPrice\",totalPrice)\r",
							"\r",
							"var depositPaid = pm.variables.replaceIn(\"{{$randomBoolean}}\")\r",
							"console.log(depositPaid)\r",
							"pm.environment.set(\"Updated_depositPaid\",depositPaid)\r",
							"\r",
							"const moment = require(\"moment\")\r",
							"const today = moment()\r",
							"var checkin = (today.add(5,'d').add(1,'M').format(\"YYYY-MM-DD\"))\r",
							"pm.environment.set(\"Updated_checkin\",checkin)\r",
							"\r",
							"const moment2 = require(\"moment\")\r",
							"const today2 = moment2()\r",
							"var checkout = (today2.add(7,'d').add(1,'M').format(\"YYYY-MM-DD\"))\r",
							"pm.environment.set(\"Updated_checkout\",checkout)\r",
							"\r",
							"var additionalNeeds = pm.variables.replaceIn(\"{{$randomWord}}\")\r",
							"console.log(additionalNeeds)\r",
							"pm.environment.set(\"Updated_additionalNeeds\",additionalNeeds)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\" : \"{{Updated_firstName}}\",\r\n\t\"lastname\" : \"{{Updated_lastName}}\",\r\n\t\"totalprice\" : {{Updated_totalPrice}},\r\n\t\"depositpaid\" : {{Updated_depositPaid}},\r\n\t\"bookingdates\" : {\r\n    \t\"checkin\" : \"{{Updated_checkin}}\",\r\n    \t\"checkout\" : \"{{Updated_checkout}}\"\r\n\t},\r\n\t\"additionalneeds\" : \"{{Updated_additionalNeeds}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify after update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var jsonData = pm.response.json()\r",
							"\r",
							"pm.test(\"First name validation\",function(){\r",
							"    pm.expect(jsonData.firstname).to.equal(pm.environment.get(\"Updated_firstName\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Last name validation\",function(){\r",
							"    pm.expect(jsonData.lastname).to.equal(pm.environment.get(\"Updated_lastName\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Verify total price\",function(){\r",
							"    pm.expect(jsonData.totalprice.toString()).to.equal(pm.environment.get(\"Updated_totalPrice\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Verify depositpaid\",function(){\r",
							"    pm.expect(jsonData.depositpaid.toString()).to.equal(pm.environment.get(\"Updated_depositPaid\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Verify checkin date\",function(){\r",
							"    pm.expect(jsonData.bookingdates.checkin).to.equal(pm.environment.get(\"Updated_checkin\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Verify checkout date\",function(){\r",
							"    pm.expect(jsonData.bookingdates.checkout).to.equal(pm.environment.get(\"Updated_checkout\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Verify additionalneeds\",function(){\r",
							"    pm.expect(jsonData.additionalneeds).to.equal(pm.environment.get(\"Updated_additionalNeeds\"))\r",
							"})\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	]
}